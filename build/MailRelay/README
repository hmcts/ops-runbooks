<h1 id="mailrelay-v2">Mailrelay v2</h1>
<p>This runbook describes how Mailrelay is configured and deployed and the steps that are necessary to on-board new clients. The Mailrelay configuration can be found in the repo <a href="https://github.com/hmcts/exim-relay">exim-relay</a>.</p>
<h2 id="mailrelay-essentials">Mailrelay Essentials</h2>
<h3 id="how-to-on-board-clients">How to On-board Clients</h3>
<p>Each service will require a username and password to utilise the Mailrelay service and these will be stored in Key Vault (<a href="https://portal.azure.com/#@HMCTS.NET/resource/subscriptions/867a878b-cb68-4de5-9741-361ac9e178b6/resourceGroups/sds-mailrelay-dev-rg/providers/Microsoft.KeyVault/vaults/sds-mailrelay-dev/secrets">Dev: sds-mailrelay-dev</a>, <a href="https://portal.azure.com/#@HMCTS.NET/resource/subscriptions/5ca62022-6aa2-4cee-aaa7-e7536c8d566c/resourceGroups/sds-mailrelay-prod-rg/providers/Microsoft.KeyVault/vaults/sds-mailrelay-prod/overview">Prod: sds-mailrelay-prod</a>). The Username will be the service name; the password should be randomly generated and be sufficiently complex.</p>

<ol>
<li>Create a new secret in Key Vault and associate a complex password</li>
<li>Branch off the <a href="https://github.com/hmcts/sds-flux-config">Flux</a> repo, edit the configuration file <a href="https://github.com/hmcts/sds-flux-config/blob/master/k8s/release/mailrelay/mailrelay2/patches/prod/cluster-00/mailrelay2.yaml">mailrelay2.yaml</a> then append the new service account to the section authKeyVaultSecrets.</li>
</ol>
<p>The syntax is as follows:</p>
<div class="highlight"><pre class="highlight plaintext" tabindex="0"><code>     - "my-service-user-account"
     - "mailrelay-prod-user"
</code></pre></div>
<ol>
<li>Create a new pull request and merge into the master branch once approved</li>
<li>Test access and connectivity as described in the section below <a href="#testing-mailrelay">Testing Mailrelay</a></li>
</ol>
<h3 id="what-is-mailrelay-and-what-is-it-used-for">What is Mailrelay and What is it used for?</h3>
<p>Exim Mail Relay is a Mail Transfer Agent, its main purpose is to receive emails from a Mail User Agent (MUA) and relay the email to other MTAs or a Mail Delivery Agent .</p>

<ol>
<li>Mailrelay AKS deployment</li>
</ol>
<p>An Exim Mailrelay container is built via Docker and stored in the ACR Azure image repository.  It&rsquo;s based on the featherweight image Alpine as defined in the git repo <a href="https://github.com/hmcts/exim-relay">Docker Exim Relay Image</a> and is built via an Azure DevOps pipeline.</p>
<p>Exim Mailrelay is currently deployed on AKS in SS-dev-00 / SS-dev-01 / SS-prod-00 / SS-prod-01 as two replicas. It is monitored using Prometheus and Grafana. Alerts are sent to the following Slack channel #prometheus-alerting-prod , #prometheus-alerts, #prometheus-critical.</p>

<ol>
<li>Modifying the exim.conf File</li>
</ol>
<p>The <a href="https://github.com/hmcts/exim-relay/blob/master/exim.conf">exim.conf</a> file specifies the configuration and behaviour of the mailrelay service in terms of security (hosts that can use the system to route mail, authentication), DNS settings (domain names, routing), protocols and many other settings.  It&rsquo;s created with makefile which collects together a group of related actions into a single build file that when executed compiles or performs some processing to create artifacts.  Read more about makefile here: <a href="https://makefiletutorial.com/">makefile tutorial</a>.</p>

<ol>
<li>Authentication Mechanisms</li>
</ol>
<p>Client applications use TLS to authenticate to the Mailrelay server to be able to send emails. The server has inbound and outbound certs. Certificates are generated using the <a href="https://github.com/hmcts/ops-runbooks/tree/master/Certificates">ACME Function App</a></p>
<p>The following certificates are installed in the Docker image which is the source of the mailrelay container:</p>
<div class="highlight"><pre class="highlight plaintext" tabindex="0"><code>dev-mailrelay-platform-hmcts-net
prod-mailrelay-platform-hmcts-net
dev-in.mailrelay.internal.platform.hmcts.net (self signed)
</code></pre></div><h2 id="deployment">Deployment</h2>

<ol>
<li><p>Clone Exim-Relay</p></li>
<li><p>After making changes to the Mailrelay configuration have someone review the pull request.</p>

<ul>
<li>While making the Pull Request please ensure that the base repo is hmcts/ exim-relay and not luigibk/exim-relay</li>
</ul></li>
<li><p>Pipeline</p>

<ul>
<li>The pipeline will run after making a PR or merging to master and will build an image in the <a href="https://portal.azure.com/#@HMCTS.NET/resource/subscriptions/5ca62022-6aa2-4cee-aaa7-e7536c8d566c/resourceGroups/sds-acr-rg/providers/Microsoft.ContainerRegistry/registries/sdshmctspublic/repository">Azure Container Repository</a></li>
</ul></li>
</ol>
<div class="highlight"><pre class="highlight plaintext" tabindex="0"><code> * The Service connection used for the pipeline is `DTS SS Public Prod`
</code></pre></div>
<ol>
<li>Configuring Shared Services Flux</li>
</ol>
<p>In order to deploy to your latest image to the Dev or Production environment flux needs to know the image it needs to look for.
In <a href="https://dev.azure.com/hmcts/PlatformOperations/_build?definitionId=432">Azure DevOps</a></p>

<ul>
<li>Clone the sds-flux-config <a href="https://github.com/hmcts/sds-flux-config">repo</a></li>
<li>change the tag to the latest tag number in the <a href="https://github.com/hmcts/sds-flux-config/tree/master/k8s/release/mailrelay/mailrelay/patches">patches file</a><br></li>
<li>Add and Commit changes<br></li>
<li>Review as required</li>
<li>Merge branch with Master.</li>
<li>After 5 to 10 minutes check the deployments have been updated on the cluster.</li>
</ul>
<h2 id="testing-mailrelay">Testing Mailrelay</h2>
<p>After making changes to Exim.conf you may need to test that emails are going through according to the authentication mechanism that you have set to be advertised by the host.</p>
<h3 id="test-unauthenticated-relay">Test unauthenticated relay</h3>

<ol>
<li>Spin up a temporary pod in the Kubernetes Cluster</li>
</ol>
<div class="highlight"><pre class="highlight shell" tabindex="0"><code>kubectl run <span class="nt">-it</span> <span class="nt">--rm</span> <span class="nt">--restart</span><span class="o">=</span>Never <span class="nt">-n</span> admin busybox <span class="nt">--image</span><span class="o">=</span>radial/busyboxplus:curl
</code></pre></div>
<ol>
<li>Get the IP address</li>
</ol>
<div class="highlight"><pre class="highlight shell" tabindex="0"><code>Kubectl get svc <span class="nt">-n</span> &lt;namespace&gt;
</code></pre></div>
<ol>
<li>Send email from pcol to chosen email</li>
</ol>
<div class="highlight"><pre class="highlight shell" tabindex="0"><code>telnet &lt;ip:port&gt;
helo possessionclaim.gov.uk
mail from: noreply-pcol@hmcts.net
rcpt to: &lt;recipient email&gt;
data
354 Enter message, ending with <span class="s2">"."</span> on a line by itself
data
Subject: <span class="nb">test                                         
test test test</span>
<span class="nb">.</span>
</code></pre></div>
<ul>
<li>Note - For dev clusters, unauthenticated relay should be turned off and you should receive a 550 unauthenticated relay response</li>
</ul>
<h3 id="test-tls-connection-using-swaks">Test TLS connection using SWAKS</h3>
<div class="highlight"><pre class="highlight shell" tabindex="0"><code>    kubectl run my-shell <span class="nt">-it</span> <span class="nt">--rm</span> <span class="nt">--restart</span><span class="o">=</span>Never <span class="nt">-n</span> admin <span class="nt">--image</span><span class="o">=</span>ubuntu <span class="nt">--command</span> <span class="nt">--</span> bash
    apt update
    apt <span class="nb">install </span>swaks
    apt <span class="nb">install </span>telnet
    swaks <span class="nt">-a</span> <span class="nt">-tls</span> <span class="nt">-q</span> HELO <span class="nt">-s</span> &lt;ip&gt;-au v1test <span class="nt">-ap</span> <span class="s1">'&lt;password'</span>
</code></pre></div><h3 id="test-starttls-connection-using-openssl">Test StartTLS connection using OpenSSL</h3>
<div class="highlight"><pre class="highlight shell" tabindex="0"><code>Turn user name and password to base 64 

<span class="nb">echo</span> <span class="nt">-ne</span> <span class="s1">'&lt;password&gt;'</span> | <span class="nb">base64

</span>Connect to Mailrelay using StartTLS 

openssl s_client <span class="nt">-connect</span> ip:port <span class="nt">-starttls</span> smtp

Send Email 
<span class="sb">```</span>bash
helo possessionclaim.gov.uk
mail from: noreply-pcol@hmcts.net
rcpt to: &lt;email&gt;
data
Subject: <span class="nb">test 
test test test</span>
<span class="nb">.</span>
</code></pre></div><h2 id="monitoring-mailrelay">Monitoring MailRelay</h2>
<p>Pre requisites</p>

<ul>
<li>GitHub write access to <a href="https://github.com/hmcts/exim-relay">Exim-Exporter</a> - Platform Operations team has access</li>
<li>Azure Devops access to <a href="https://dev.azure.com/hmcts/Shared%20Services/_build?definitionId=504">Exim Exporter Pipeline</a> - Platform Operations team has access</li>
</ul>
<h3 id="prometheus">Prometheus</h3>

<ul>
<li>The Prometheus server (Monitoring Namespace) is used to obtain metrics from the exim server and exports them using the Exim-Exporter tool</li>
<li>The <a href="https://github.com/hmcts/exim_exporter">exim exporter</a> is used to read and send exim relay metrics to Prometheus server</li>
<li>The Alert Manager (Monitoring Namespace) takes these metrics and sends it to specified Slack Channels.</li>
<li>The <a href="https://github.com/hmcts/sds-flux-config/blob/master/k8s/namespaces/monitoring/kube-prometheus-stack/patches/dev/cluster-00/mailrelay-alerts-rules.yaml">Prometheus alerts</a> for mailrelay can be updated if current alerts needs to be updated</li>
</ul>

<!--
### Grafana

*more to be added*

-->
<h2 id="troubleshooting-common-errors">Troubleshooting Common Errors</h2>
<p>Alerts are not being sent to Slack</p>

<ul>
<li>Check alert logs</li>
</ul>
<div class="highlight"><pre class="highlight shell" tabindex="0"><code>kubectl <span class="nb">exec</span> <span class="nt">--stdin</span> <span class="nt">--tty</span> alertmanager-kube-prometheus-stack-alertmanager-0   <span class="nt">-n</span> monitoring <span class="nt">--</span> /bin/sh

kubectl logs <span class="nt">-f</span> <span class="nt">-c</span> alertmanager alertmanager-kube-prometheus-stack-alertmanager-0 <span class="nt">-n</span> monitoring

kubectl logs <span class="nt">-f</span> <span class="nt">-c</span> alertmanager alertmanager-kube-prometheus-stack-alertmanager-0 <span class="nt">-n</span> monitoring <span class="o">&gt;</span> alertmanager-logs.log
</code></pre></div>
<ul>
<li>Make post request</li>
</ul>
<div class="highlight"><pre class="highlight shell" tabindex="0"><code>wget <span class="nt">--header</span> <span class="s2">"content-type: application/json"</span> <span class="nt">--post-data</span> <span class="s1">'[{"status": "firing","labels": {"alertname": "EximQueueLength","service": "mailrelay","severity": "warning","instance": "0"}}]'</span> http://localhost:9093/api/v1/alert
</code></pre></div><h2 id="performance-testing">Performance Testing</h2>
<p><em>more to be added</em></p>
<h2 id="further-links">Further Links</h2>

<ul>
<li><p><a href="https://www.exim.org/docs.html">https://www.exim.org/docs.html</a></p></li>
<li><p><a href="https://serverfault.com/">https://serverfault.com/</a></p></li>
<li><p><a href="https://alanstorm.com/what-are-prometheus-exporters/">https://alanstorm.com/what-are-prometheus-exporters/</a></p></li>
<li><p><a href="https://prometheus.io/docs/instrumenting/exporters/">https://prometheus.io/docs/instrumenting/exporters/</a></p></li>
</ul>
