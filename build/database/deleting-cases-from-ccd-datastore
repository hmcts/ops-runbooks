<h1 id="deleting-a-case-from-ccd-datastore-database">Deleting a case from CCD Datastore Database</h1>
<p>This is a 2-stage process that requires you delete the case from the database first and then ssh to the Elastic Search VM to delete the same. Please ensure you have a valid ServiceNow Change Request to do so.</p>
<h2 id="1-identify-case-in-ccd-data-store-database-ccd-data-store-api-postgres-db-v11-prod-postgres-database-azure-com-and-delete">1. Identify case in CCD Data Store Database [ccd-data-store-api-postgres-db-v11-prod.postgres.database.azure.com] and delete</h2>
<p>Hop on to the bastion and run the script below.</p>
<p>The script calls an external .txt file which contains a list of valid CCD Data Store 16-digit unique reference numbers that need deleting. Each case needs deleting from a number of tables in DataStore.  The first two tables may be empty, but the bottom two will most certainly contain data.</p>
<div class="highlight"><pre class="highlight shell" tabindex="0"><code><span class="c">#!/bin/bash</span>

<span class="c">## BULK Deletes in CCD Data Store DB</span>

<span class="c">#vARS</span>
<span class="nv">DB_HOST</span><span class="o">=</span>ccd-data-store-api-postgres-db-v11-prod.postgres.database.azure.com
<span class="nv">DB_USER</span><span class="o">=</span><span class="s2">"DTS</span><span class="se">\ </span><span class="s2">Platform</span><span class="se">\ </span><span class="s2">Operations</span><span class="se">\ </span><span class="s2">SC@ccd-data-store-api-postgres-db-v11-prod"</span>
<span class="nv">DB_NAME</span><span class="o">=</span>ccd_data_store
<span class="nv">PGPASSWORD</span><span class="o">=</span><span class="si">$(</span>az account get-access-token <span class="nt">--resource-type</span> oss-rdbms <span class="nt">--query</span> accessToken <span class="nt">-o</span> tsv<span class="si">)</span>


        <span class="c">#referenceid=1594642772192927;</span>
        <span class="k">for </span>referenceid <span class="k">in</span> <span class="sb">`</span><span class="nb">cat </span>list_of_CaseReference.txt<span class="sb">`</span><span class="p">;</span>

            <span class="k">do

                </span><span class="nv">QUERY</span><span class="o">=</span><span class="si">$(</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh">

                        BEGIN;
                            DELETE FROM case_users_audit WHERE case_data_id = (SELECT id FROM case_data WHERE reference = (</span><span class="nv">$referenceid</span><span class="sh">));
                            DELETE FROM case_users WHERE case_data_id = (SELECT id FROM case_data WHERE reference = (</span><span class="nv">$referenceid</span><span class="sh">));
                            DELETE FROM case_event_significant_items WHERE case_event_id IN (SELECT id FROM case_event WHERE case_data_id IN (SELECT id FROM case_data WHERE reference = (</span><span class="nv">$referenceid</span><span class="sh">)));
                            DELETE FROM case_event WHERE case_data_id = (SELECT id FROM case_data WHERE reference = (</span><span class="nv">$referenceid</span><span class="sh">));
                            DELETE FROM case_data WHERE reference = (</span><span class="nv">$referenceid</span><span class="sh">);
                        COMMIT;
</span><span class="no">
                EOF
</span>                  <span class="si">)</span>

<span class="c"># Run above query</span>
psql <span class="s2">"sslmode=require host=</span><span class="k">${</span><span class="nv">DB_HOST</span><span class="k">}</span><span class="s2"> dbname=</span><span class="k">${</span><span class="nv">DB_NAME</span><span class="k">}</span><span class="s2"> user=</span><span class="k">${</span><span class="nv">DB_USER</span><span class="k">}</span><span class="s2"> port=5432 password=</span><span class="k">${</span><span class="nv">PGPASSWORD</span><span class="k">}</span><span class="s2">"</span> <span class="nt">-c</span> <span class="s2">"</span><span class="k">${</span><span class="nv">QUERY</span><span class="k">}</span><span class="s2">"</span>

          <span class="k">done</span>
</code></pre></div><h2 id="2-on-the-elastic-search-vm-execute-the-script-below-using-the-16-digit-reference-to-identify-the-case">2. On the Elastic Search VM, execute the script below using the <code>16-digit reference</code> to identify the Case</h2>
<div class="highlight"><pre class="highlight shell" tabindex="0"><code><span class="c">#!/bin/bash</span>

<span class="nv">QUERY</span><span class="o">=</span><span class="si">$(</span>jq <span class="nt">-n</span> <span class="se">\</span>
<span class="nt">--arg</span> my_val <span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span> <span class="se">\</span>
<span class="s1">'
{
  query:{
    bool:{
      filter:{
        term:{
          "reference.keyword":$my_val
        }
      }
    }
  }
}
'</span><span class="si">)</span>

<span class="nv">RESULT</span><span class="o">=</span><span class="si">$(</span>curl <span class="nt">-s</span> <span class="nt">-X</span> GET <span class="s1">'localhost:9200/_search?pretty'</span> <span class="nt">-H</span> <span class="s1">'Content-Type: application/json'</span> <span class="nt">-d</span> <span class="s2">"</span><span class="k">${</span><span class="nv">QUERY</span><span class="k">}</span><span class="s2">"</span><span class="si">)</span>

<span class="nv">CASE_ID</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$RESULT</span><span class="s2">"</span> | jq <span class="nt">-r</span> <span class="s1">'.hits.hits[0]._id'</span><span class="si">)</span>
<span class="nv">INDEX_ID</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$RESULT</span><span class="s2">"</span> | jq <span class="nt">-r</span> <span class="s1">'.hits.hits[0]._source.index_id'</span><span class="si">)</span>

<span class="nb">echo</span> <span class="s2">"Case ID: </span><span class="nv">$CASE_ID</span><span class="s2">, Index ID: </span><span class="nv">$INDEX_ID</span><span class="s2">"</span>

<span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$INDEX_ID</span><span class="s2">"</span> <span class="o">!=</span> <span class="s2">"null"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
  </span><span class="nv">CASE</span><span class="o">=</span><span class="si">$(</span>curl <span class="nt">-s</span> <span class="nt">-X</span> GET <span class="s2">"localhost:9200/</span><span class="nv">$INDEX_ID</span><span class="s2">/_doc/</span><span class="nv">$CASE_ID</span><span class="s2">"</span> | jq .<span class="si">)</span>
  curl <span class="nt">-s</span> <span class="nt">-X</span> DELETE <span class="s2">"localhost:9200/</span><span class="nv">$INDEX_ID</span><span class="s2">/_doc/</span><span class="nv">$CASE_ID</span><span class="s2">"</span> | jq <span class="nb">.</span>

<span class="k">else
  </span><span class="nb">date
  echo</span> <span class="s2">"No valid index was found."</span>
<span class="k">fi</span>
</code></pre></div><p>e.g.</p>
<div class="highlight"><pre class="highlight plaintext" tabindex="0"><code>  ./find_case_id_by_reference.sh `&lt;16-digit reference&gt;`
</code></pre></div><p>and follow the screen prompt</p>
