<h1 id="accessing-heritage-extsvc-virtual-machines">Accessing Heritage EXTSVC Virtual Machines</h1>
<p>Many External Services VMs in Heritage (also known as the spoke VMs) are currently not networked into the HMCTS bastions in the way that the rest of reform is. This document details how to gain access to these VMs, using <code>POAG-WEB-VM01</code> as an example.</p>

<ol>
<li>Find the appropriate DevOps VM</li>
</ol>
<p>Rather than being networked into the Bastions directly, most spoke VMs are only accessible from their management and devops VMs, which in turn are accessible from the HMCTS bastion. Either of these VMs will allow access to the spoke VM, but PlatOps should prefer access through the devops VM. Exactly what devops VM corresponds to the VM we&rsquo;re trying to get into may require some investigation if not readily known.</p>
<p>Using our example of <code>POAG-WEB-VM01</code>, in the azure portal, we can see that it&rsquo;s connected to the <code>vnet-prod-ext-01</code> virtual network.</p>
<p>If we have a look at the virtual network and search for a device that sounds vaguely devops-related, we can see a network interface attached to <code>PEXT-DEVOPS-VM01</code>. We can use this machine to access the spoke VM.</p>
<p><a href="vnet-prod-ext-01_screenshot.png" rel="noopener noreferrer"><img src="/heritage/vnet-prod-ext-01_screenshot.png" alt="Screenshot of vnet-prod-ext-01 in the Azure Portal" /></a></p>

<ol>
<li>Find and Obtain the Admin Private Key</li>
</ol>
<p>Both the EXTSVC VMs and the DevOps VMs rely on private key authentication for incomming connections.  We&rsquo;ll need to find out what private keys the machines want. Thankfully this is fairly easy.</p>
<p>If we have a look at the &lsquo;Connect&rsquo; tab of <code>POAG-WEB-VM-01</code> in the Azure Portal, under &lsquo;SSH&rsquo;, we can see we&rsquo;ll need a private key called &lsquo;v1admin.pem&rsquo;. <code>PEXT-DEVOPS-VM01</code> shows the same key.</p>
<p><a href="POAG-WEB-VM01_screenshot.png" rel="noopener noreferrer"><img src="/heritage/POAG-WEB-VM01_screenshot.png" alt="Screenshot of POAG-WEB-VM01 in the Azure Portal" /></a></p>
<p>These keys are almost always stored in a key vault within the same subscription as the VMs. In this case, both VMs are in the <code>DTS-HERITAGE-EXTSVC-PROD</code> subscription, which only has one key vault: <code>hmcts-kv-prod-ext</code>.</p>
<p>Private keys are located under the &lsquo;Secrets&rsquo; tab of the key vault in the Azure Portal. If you don&rsquo;t have secret &lsquo;get&rsquo; or &lsquo;list&rsquo; permissions on the key vault in question, you may need to add an access policy for yourself under the &lsquo;Access policies&rsquo; tab.</p>

<ol>
<li>Gain bastion access for the desited environment.</li>
</ol>
<p>Details on how to obtain bastion access can be found in <a href="https://tools.hmcts.net/confluence/pages/viewpage.action?pageId=1411089455">the Bastion documentation on Confluence</a>. Since <code>POAG-WEB-VM01</code> is a production VM, we&rsquo;ll need to request and obtain bastion access for the production environment.</p>

<ol>
<li>SSH into the Bastion Server</li>
</ol>
<div class="highlight"><pre class="highlight plaintext" tabindex="0"><code>ssh bastion-prod.platform.hmcts.net
</code></pre></div>
<ol>
<li>SSH into the DevOps VM</li>
</ol>
<p>You&rsquo;ll need to provide the private key to obtained in step 2 here. To do this, create a file and paste the value in. Name it something obvious so you don&rsquo;t forget what the key corresponds to. In this example, we&rsquo;ll use &lsquo;v1admin.pem&rsquo;.</p>
<div class="highlight"><pre class="highlight plaintext" tabindex="0"><code># Substitute an editor of your choice
vim v1admin.pem
</code></pre></div><p>If permissions on the private key are too permissive, SSH will refuse to accept it. Here we change the permissions to 400, which will prohibit reading by everyone except your user.</p>
<div class="highlight"><pre class="highlight plaintext" tabindex="0"><code>chmod 400 v1admin.pem
</code></pre></div><p>You can then provide the key to SSH using the <code>-i</code> flag:</p>
<div class="highlight"><pre class="highlight plaintext" tabindex="0"><code># Connect to PEXT-DEVOPS-VM01
# Swap the IP out if connecting to a different VM
ssh -i v1admin.pem v1admin@10.224.249.196
</code></pre></div>
<ol>
<li>SSH into the spoke VM</li>
</ol>
<p>Finally we can SSH into the spoke VM. The admin private key may be present in the home directory of the machine you just SSH-ed into, albeit under a different name. If it is, you can just plug it right into SSH and log in to the spoke VM:</p>
<div class="highlight"><pre class="highlight plaintext" tabindex="0"><code># Connect to POAG-WEB-VM01
# Swap the IP out if connecting to a different VM
ssh -i v1adminkey v1admin@10.224.249.4
</code></pre></div><p>You should now be connected to the spoke VM. While making the three SSH jumps, it can be easy to lose track of what machine you&rsquo;re connected to, especially if doing work across multiple spokes. If you&rsquo;re ever unsure, you can always check the hostname file to verify what machine you&rsquo;re on:</p>
<div class="highlight"><pre class="highlight plaintext" tabindex="0"><code>cat /etc/hostname
</code></pre></div>